/* Constraints: Had to run in 2 seconds and take up no more than
 * 		256 mb of memory.
 * Score: 165.55 out of 250 points
 * Level: Easy
 */
 
#include<vector>
#include<iostream>
#include<string>

using namespace std;

class AmoebaDivTwo{
  	int h;
 public:
    int count(vector <string> table, int K)
    {
        vector<string>::iterator myIterator = table.begin();
        int val = 0;
        while(myIterator!=table.end())
        {
         	helper(*(myIterator), val, K);
            myIterator++;
        }
        for(int i=0; i<h; i++)
        {
            string myStr = "";
            myIterator = table.begin();
         	while(myIterator!=table.end())
            {
              	myStr += (*(myIterator))[i];
                myIterator++;
            }
            helper(myStr, val, K);
        }
        return val;
    }
    void helper(string S, int& count, int size)
    {
        int total = 0, i=0, running = 0;
        while(S[i]!='\0')
        {
        	if(S[i]!='M')
                running++;
            else
                running = 0;
            if(running>total)
                total = running;
            i++;
        }
        count += total%size;
        h = i;
    }
};

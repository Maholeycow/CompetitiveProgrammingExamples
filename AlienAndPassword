/* Constraints: Had to run in 2 seconds and take up no more than
 * 		256 mb of memory.
 * Score: 188.17 out of 250 points
 * Level: Easy
 */

#include<string>
#include<bitset>
using namespace std;
class AlienAndPassword{
  
 public:
    int getNumber(string S)
    {
        int uniqueChars = 0;
        bitset<26> foo;
     	int length = sizeof(S)/sizeof(S[0]);
        for(int i = 0; i<length; i++)
        {
            if(foo.test(S[i]))
               continue;
            else {
                foo.set((int)S[i] - 65);
            	uniqueChars++;
            }
        }
        if(length == 1 || uniqueChars == 1)
            return 1;
      	return (permutation(length)/permutation(length-uniqueChars));
    }
    
    int permutation(int n)
    {
       if(n==0)
           return 1;
       else
 			return permutation(n-1);    
    }
};
